using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Models;
using Models.DAL;
using Models.BLL;
using WebApplication1.Models;
using WebApplication1.Models.DAL;
using WebApplication1.Models.BLL;
using System.Text.RegularExpressions;
using System.IO;
using System.Web.Services.Description;

namespace WebApplication1.Controllers
{
    public class HomeController : BaseController
    {
        public new ActionResult Index()
        {
            ViewData["Message"] = "hello word";
            return View();
        }

        Order order = new Order();
        private OrderServices orders = new OrderServices();
        [HttpPost]
        public ActionResult Index(List<string> orderno, List<string> name, List<string> tel, List<decimal> total, List<int> is_pay, List<string> remark, List<int> caeated_at)
        {

            for (int i = 0; i < orderno.Count; i++)
            {


                order.orderno = orderno[i];
                order.name = name[i];
                order.tel = tel[i];
                order.total = total[i];
                order.is_pay = is_pay[i];
                order.remark = remark[i];
                order.caeated_at = caeated_at[i];
                ProductSubmit(order);
            }
            return View();
        }
        public bool ProductSubmit(Order order)
        {

            orders.add(order);

            return true;
        }

        public List<Order> Query()
        {

            return orders.Query();

        }
        public ActionResult About()
        {
            var list = Query();
            foreach (var item in list)
            {
                //  info= item.orderno;

                //   Array name[i] = item.name;
                ViewBag.Model = list;
            }
            return View();
        }
        [HttpPost]
        public ActionResult About1()
        {

            var list = Query();
            JsonResult ajaxRes = new JsonResult();
            // string[] info = { };

            List<string> date = new List<string>();
            List<string> count = new List<string>();

            foreach (var item in list)
            {
                //  info= item.orderno;

                //   Array name[i] = item.name;
                ViewBag.Model = list;

                date.Add(item.orderno);
                count.Add(item.name);

                //  ajaxRes.Data = new { 日期 = item.orderno, 统计 = item.name };

            }
            string[] dateArr = date.ToArray();
            string[] countArr = count.ToArray();
            ajaxRes.JsonRequestBehavior = JsonRequestBehavior.AllowGet;
            //  ajaxRes.Data = dateArr;
            //   ajaxRes.Data = countArr;
            ajaxRes.Data = new { 日期 = dateArr, 统计 = countArr };


            return ajaxRes;
        }



        public ActionResult Contact()
        {
            ViewBag.Message = "Your contact page.";

            return View();
        }
        [HttpPost]
        public JsonResult Contact1()
        {
            string[][] user =
                {
                new string[]{ "李蕊", "18"},
                new string[]{ "王宝杰", "20" },
                new string[]{ "李海鹏", "15" }
            };
            string[] name = new string[3];
            string[] age = new string[3];
            //  List<string> name = new List<string>();
            // string[] dateArr = name.ToArray();
            for (int i = 0; i <= 2; i++)
            {

                name[i] = user[i][0];
                age[i] = user[i][1];


            }
            string[][] date = new string[2][];
            date[0] = name;
            date[1] = age;

            return Json(date);
        }

        public ActionResult Add()
        {
            return View();
        }
        /// <summary>
        /// 添加
        /// </summary>
        /// <param name="orderno"></param>
        /// <returns></returns>
        //[HttpPost]
        //public JsonResult Adds(string userid, string password, string username)
        //{
        //    if (userid == "")
        //    {
        //        // Response.Write("<script>alert('请输入手机号!');location.href='/Home/Adds';</script>");
        //        return Json(new { status = 1, message = "请输入手机号" });
        //    }
        //    model.UserId = userid;
        //    model.PassWord = password;
        //    model.PassWord = Common.MD5(model.PassWord);
        //    model.UserName = username;

        //    //  保存到数据库
        //    int result = user.IsExitstPhone(userid);
        //    if (result > 0)
        //    {
        //        return Json(new { status = 1, message = "手机号码已经被占用！请换手机号码" });
        //    }


        //    user.Register(model);

        //    return Json(new { status = 1, message = "添加用户成功" });
        //}

        public string Adds()
        {
           if( Request.Form["userid"].ToString()=="")
            {
                Response.Write("<script>alert('请输入手机号!');location.href='/Home/Managers';</script>");
                return "请输入手机号";
            }
            model.UserId = Request.Form["userid"].ToString();
            model.PassWord = Request.Form["password"].ToString();
            model.PassWord = Common.MD5(model.PassWord);
            model.UserName = Request.Form["username"].ToString();
            //  保存到数据库
            int result = user.IsExitstPhone(model.UserId);
            if (result > 0)
            {
                Response.Write("<script>alert('手机号码已经被占用！请换手机号码!');location.href='/Home/Managers';</script>");
               
            }


            user.Register(model);

            Response.Write("<script>alert('添加用户成功!');location.href='/Home/Managers';</script>");
            return "添加用户成功";
        }




        public ActionResult Login()
        {
            return View();
        }
        private UserManager user = new UserManager();
        Users model = new Users();
        [HttpPost]
        public JsonResult Logins(string username, string password)
        {
            string UserId = username;
            string PassWord = Common.MD5(password);
            Session["UserId"] = username;
            model = user.Login(UserId, PassWord);
            if (model != null && model.UserId == UserId && model.PassWord == PassWord)
            {

                return Json(new { status = 1, message = "登陆成功,正在跳转......" });
            }

            return Json(new { status = 0, message = "登陆失败，请检测用户名或密码是否正确" });
        }
        public ActionResult Managers()
        {
            return View();
        }
        public ActionResult Register()
        {
            this.Session.Clear();
            this.Session.Abandon();
            return View();
        }
        #region 验证码
        /// <summary>
        /// 验证码的校验
        /// </summary>
        /// <param name="context"></param>
        /// <returns></returns>
        public ActionResult CheckCode()
        {
            //生成验证码
            ValidateCode validateCode = new ValidateCode();
            string code = validateCode.CreateValidateCode(4);
            TempData["VerificationCode"] = code;
            byte[] bytes = validateCode.CreateValidateGraphic(code);
            var s = File(bytes, @"image/jpeg");
            return s;
        }
        #endregion

        [HttpPost]
        public JsonResult registers(string username, string password, string verifi)
        {



            model.UserId = username;
            model.PassWord = password;
            model.PassWord = Common.MD5(model.PassWord);

            model.verificationcode = verifi;
            string context = Convert.ToString(Session["context" + username]);
            if (verifi != context)
            {
                return Json(new { status = 0, message = "验证码不正确" });
            }
            //  保存到数据库
            int result = user.IsExitstPhone(username);
            if (result > 0)
            {
                return Json(new { status = 1, msg = "手机号码已经被占用！请换手机号码" });
            }


            user.Register(model);

            return Json(new { status = 1, message = "注册成功，请登录" });

        }


        public JsonResult yanzhengma(string username)
        {
            model.UserId = username;
            string context = Common.strRandom();
            Session["context" + username] = context;
            int result = user.IsExitstPhone(username);
            if (result > 0)
            {
                return Json(new { status = 1, msg = "手机号码已经被占用！请换手机号码" });
            }
            return Json(new { msg = context });
        }

        public ActionResult Address()
        {
            FileIO();

            return View();
        }
        public ActionResult Address1()
        {
            FileIO();

            return View();
        }
        public static List<Province> prolist = new List<Province>();
        public static int pronum = 0;
        public static List<City> citlist = new List<City>();
        public static int citnum = 0;
        public static void FileIO()
        {

            var path = System.Web.HttpContext.Current.Server.MapPath(@"~/Content/省市区.txt");
            using (StreamReader sr = new StreamReader(path, System.Text.Encoding.Default))
            {
                string s = "";
                while ((s = sr.ReadLine()) != null)
                {
                    s = s.Trim();
                    char[] str = s.ToCharArray();
                    if (str[0] >= '0' && str[0] <= '9' && (str[1] == '.' || (str[1] >= '0' && str[1] <= '9' && str[2] == '.')))
                    {
                        int id;
                        string name;
                        if (str[1] == '.')
                        {
                            id = str[0] - '0';
                            name = s.Substring(2, s.Length - 2);
                        }
                        else
                        {
                            id = (str[0] - '0') * 10 + str[1] - '0';
                            name = s.Substring(3, s.Length - 3);
                        }
                        prolist.Add(new Province() { ID = id, Name = name });
                        pronum++;
                        sr.ReadLine();
                    }
                    else
                    {
                        string[] ary;
                        ary = s.Split(' ');
                        for (int i = 0; i < ary.Length; i++)
                        {
                            string it;
                            if (ary[i].Length == 1) { it = ary[i] + ary[i + 1]; i++; }
                            else
                            {
                                it = ary[i];
                            }
                            citlist.Add(new City() { ID = citnum, Name = it, ProvinceID = pronum, ZipCode = citnum.ToString().PadLeft(4, '0') });
                            citnum++;
                        }
                    }
                }
            }
        }
        public JsonResult GetCities(string id)
        {
            List<SelectListItem> items = new List<SelectListItem>();
            if (!string.IsNullOrEmpty(id))
            {
                var cities = Service.GetCitiesByProvince(int.Parse(id));
                //var cities = GetCitiesByProvince(int.Parse(id));
                foreach (City c in cities)
                {
                    items.Add(new SelectListItem()
                    {
                        Text = string.Concat(c.ID, " ", c.Name),
                        Value = c.ID.ToString()
                    });
                }

                if (!items.Count.Equals(0))
                {
                    items.Insert(0, new SelectListItem() { Text = "请选择", Value = "" });
                }
            }
            return Json(items, JsonRequestBehavior.AllowGet);

        }

        public JsonResult Provinces()
        {
            List<SelectListItem> items = new List<SelectListItem>();
            var province = Service.GetProvinces();

            foreach (Province p in province)
            {
                items.Add(new SelectListItem()
                {
                    Text = string.Concat(p.ID, " ", p.Name),
                    Value = p.ID.ToString()
                });
            }

            if (!items.Count.Equals(0))
            {
                items.Insert(0, new SelectListItem() { Text = "请选择", Value = "" });
            }
            return Json(items, JsonRequestBehavior.AllowGet);

        }
        public static class Service
        {
            [HttpGet]
            public static List<Province> GetProvinces()
            {

                return prolist;

            }

            public static List<City> GetCitiesByProvince(int provinceId)
            {
                return citlist.Where(r => r.ProvinceID == provinceId).ToList();
            }
        }
    }
}